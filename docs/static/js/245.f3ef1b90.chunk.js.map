{"version":3,"file":"static/js/245.f3ef1b90.chunk.js","mappings":"8UAmCA,EA/B2BA,EAAAA,YAAiB,SAAAC,EAWzCC,GAAQ,IAVTC,EAAQF,EAARE,SACAC,EAASH,EAATG,UACAC,EAAOJ,EAAPI,QACAC,EAAQL,EAARK,SACAC,EAAUN,EAAVM,WACAC,EAAKP,EAALO,MACAC,EAAIR,EAAJQ,KACAC,EAAOT,EAAPS,QACAC,EAAUV,EAAVU,WACGC,GAAKC,EAAAA,EAAAA,GAAAZ,EAAAa,GAEFC,GAAoBC,EAAAA,EAAAA,IAAmBb,EAAU,SACjDc,EAAUC,IAAWd,EAAWW,EAAmBL,GAAW,GAAJS,OAAOJ,EAAiB,KAAAI,OAAIT,GAAWD,GAAQ,GAAJU,OAAOJ,EAAiB,KAAAI,OAAIV,GAAQJ,GAAW,GAAJc,OAAOJ,EAAiB,KAAAI,OAAuB,kBAAZd,EAAuB,WAAHc,OAAcd,GAAY,WAAaC,GAAY,GAAJa,OAAOJ,EAAiB,aAAaR,GAAc,GAAJY,OAAOJ,EAAiB,eAAeP,GAAS,GAAJW,OAAOJ,EAAiB,WACzWK,GAAqBC,EAAAA,EAAAA,KAAK,SAAOC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAClCV,GAAK,IACRR,UAAWa,EACXf,IAAKA,KAEP,GAAIS,EAAY,CACd,IAAIY,EAAkB,GAAHJ,OAAMJ,EAAiB,eAI1C,MAH0B,kBAAfJ,IACTY,EAAkB,GAAHJ,OAAMI,EAAe,KAAAJ,OAAIR,KAEtBU,EAAAA,EAAAA,KAAK,MAAO,CAC9BjB,UAAWmB,EACXC,SAAUJ,GAEd,CACA,OAAOA,CACT,I,8BC0CA,MA5DA,YACEK,EAAAA,EAAAA,UAAQ,WACN,OANM,CAOR,GAAG,IAGH,IAAIC,GAAQC,EAAAA,EAAAA,KAAY,SAACC,GACvB,OAAOA,CACT,IACIC,GAAWC,EAAAA,EAAAA,MACfC,GAAwBC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAEnC,OAFUE,EAAA,GAAUA,EAAA,IAGlBZ,EAAAA,EAAAA,KAAA,OAAAG,UACEW,EAAAA,EAAAA,MAACC,EAAK,CAAAZ,SAAA,EACJH,EAAAA,EAAAA,KAAA,SAAAG,UACEW,EAAAA,EAAAA,MAAA,MAAAX,SAAA,EACEH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,OACJH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,kBACJH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,cACJH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,YACJH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,iBAGRH,EAAAA,EAAAA,KAAA,SAAAG,SACGE,EAAMW,KAAKC,KAAI,SAACC,EAASC,GACxB,OACEL,EAAAA,EAAAA,MAAA,MAAAX,SAAA,EACEH,EAAAA,EAAAA,KAAA,MAAAG,SAAKgB,EAAI,KACTnB,EAAAA,EAAAA,KAAA,MAAAG,SAAKe,EAAQE,QACbpB,EAAAA,EAAAA,KAAA,MAAAG,SAAKe,EAAQG,SACbP,EAAAA,EAAAA,MAAA,MAAAX,SAAA,EACEH,EAAAA,EAAAA,KAAA,UACEsB,QAAS,WAEPd,GAASe,EAAAA,EAAAA,IAAeL,EAAQM,IAClC,EAAErB,SACH,MAGAsB,QAAQC,IAAI,aAAcR,EAAQM,QAErCxB,EAAAA,EAAAA,KAAA,MAAAG,UACEH,EAAAA,EAAAA,KAAA,UACEsB,QAAS,WACPd,GAASmB,EAAAA,EAAAA,IAAWT,EAAQM,IAC9B,EAAErB,SACH,eApBIgB,EA0Bb,UAKV,C","sources":["../node_modules/react-bootstrap/esm/Table.js","routes/cart.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;","import { Table } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { changeName, changeAge } from \"../store/userSlice\";\nimport { quantityUpdate, deleteCart } from \"./../store\";\nimport { memo, useMemo, useState } from \"react\";\n\nlet Child = memo(function Child() {\n  console.log(\"rerendering...\");\n  return <div>Child here...</div>;\n});\n\nfunction example() {\n  let x = 0;\n  return x;\n}\n\nfunction Cart() {\n  useMemo(() => {\n    return example();\n  }, []);\n  // *** useMemo와 useEffect 와 동일.  단 한가지 다른 점은 렌더링 시점. useEffect는 HTML 렌더링이 모두 끝난 후 실행.  useMemo는 HTML 렌더링과 같이 실행됨.\n\n  let store = useSelector((state) => {\n    return state;\n  });\n  let dispatch = useDispatch();\n  let [count, setCount] = useState(0);\n\n  return (\n    <div>\n      <Table>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Product Name</th>\n            <th>Quantity</th>\n            <th>Update</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {store.cart.map((product, i) => {\n            return (\n              <tr key={i}>\n                <td>{i + 1}</td>\n                <td>{product.name}</td>\n                <td>{product.count}</td>\n                <td>\n                  <button\n                    onClick={() => {\n                      /* dispatch(changeName()); */\n                      dispatch(quantityUpdate(product.id));\n                    }}\n                  >\n                    +\n                  </button>\n                  {console.log(\"product.id\", product.id)}\n                </td>\n                <td>\n                  <button\n                    onClick={() => {\n                      dispatch(deleteCart(product.id));\n                    }}\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n\nexport default Cart;\n"],"names":["React","_ref","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","_objectWithoutProperties","_excluded","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","concat","table","_jsx","_objectSpread","responsiveClass","children","useMemo","store","useSelector","state","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","_jsxs","Table","cart","map","product","i","name","count","onClick","quantityUpdate","id","console","log","deleteCart"],"sourceRoot":""}